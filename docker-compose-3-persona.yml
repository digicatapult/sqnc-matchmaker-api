networks:
  chain:
    ipam:
      driver: default
  ipfs:
    ipam:
      driver: default
  member-a:
    ipam:
      driver: default
  member-b:
    ipam:
      driver: default
  optimiser:
    ipam:
      driver: default

services:
  # -------------------------------------------------------------------- member-a
  member-a-postgres-matchmaker-api:
    image: postgres:17.4-alpine
    container_name: member-a-postgres-matchmaker
    ports:
      - 5432:5432
    volumes:
      - member-a-matchmaker-api-storage:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=sqnc-matchmaker-api
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
    networks: ['member-a']

  member-a-postgres-identity:
    image: postgres:17.4-alpine
    container_name: member-a-postgres-identity
    ports:
      - 5433:5432
    volumes:
      - member-a-identity-storage:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=sqnc-identity
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
    networks: ['member-a']

  member-a-postgres-attachment-api:
    image: postgres:17.4-alpine
    container_name: member-a-postgres-attachment
    ports:
      - 5434:5432
    volumes:
      - member-a-attachment-api-storage:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=sqnc-attachment-api
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
    networks: ['member-a']

  member-a-identity:
    image: digicatapult/sqnc-identity-service:v4.2.14
    container_name: member-a-identity
    command: /bin/sh -c "npx knex migrate:latest && npm start"
    depends_on:
      member-a-postgres-identity:
        condition: service_healthy
      member-a-node:
        condition: service_healthy
    ports:
      - 3002:3000
    environment:
      - API_HOST=member-a-node
      - DB_HOST=member-a-postgres-identity
      - DB_PORT=5432
      - DB_NAME=sqnc-identity
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - SELF_ADDRESS=5GrwvaEF5zXb26Fz9rcQpDWS57CtERHpNehXCPcNoHGKutQY
      - IDP_CLIENT_ID=sequence
      - IDP_PUBLIC_ORIGIN=http://localhost:3080
      - IDP_INTERNAL_ORIGIN=http://keycloak:8080
      - IDP_PATH_PREFIX=
      - IDP_OAUTH2_REALM=member-a
      - IDP_INTERNAL_REALM=internal
    networks: ['member-a']

  member-a-attachment:
    image: digicatapult/sqnc-attachment-api:v3.0.21
    container_name: member-a-attachment
    command: /bin/sh -c "npx knex --env production migrate:latest && npm start"
    depends_on:
      member-a-postgres-attachment-api:
        condition: service_healthy
    ports:
      - 3003:3000
    environment:
      - DB_HOST=member-a-postgres-attachment
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=sqnc-attachment-api
      - IPFS_HOST=ipfs
      - IDENTITY_SERVICE_HOST=member-a-identity
      - IDP_CLIENT_ID=sequence
      - IDP_PUBLIC_ORIGIN=http://localhost:3080
      - IDP_INTERNAL_ORIGIN=http://keycloak:8080
      - IDP_PATH_PREFIX=
      - IDP_OAUTH2_REALM=member-a
      - IDP_INTERNAL_REALM=internal
      - IDP_EXTERNAL_REALM=external
      - IDP_INTERNAL_CLIENT_ID=sequence
      - IDP_INTERNAL_CLIENT_SECRET=secret
      - AUTHZ_WEBHOOK=http://member-a-matchmaker:3000/v1/authz
    networks: ['member-a', 'ipfs']

  member-a-node:
    image: digicatapult/sqnc-node:v12.5.0
    container_name: member-a-node
    command: --base-path /data --alice --unsafe-rpc-external --rpc-cors all --node-key 0000000000000000000000000000000000000000000000000000000000000001
    ports:
      - 9944:9944
    restart: on-failure
    volumes:
      - member-a-node-storage:/data
    networks: ['member-a', 'chain']

  member-a-matchmaker-api:
    container_name: member-a-matchmaker
    build:
      context: './'
      dockerfile: 'Dockerfile'
    command: /bin/sh -c "npx knex migrate:latest --knexfile build/lib/db/knexfile && npx @digicatapult/sqnc-process-management create -h member-a-node -p 9944 -u //Alice -f processFlows.json && npm start"
    environment:
      - NODE_HOST=member-a-node
      - NODE_PORT=9944
      - DB_HOST=member-a-postgres-matchmaker
      - DB_PORT=5432
      - DB_NAME=sqnc-matchmaker-api
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - IDENTITY_SERVICE_HOST=member-a-identity
      - IDENTITY_SERVICE_PORT=3000
      - ATTACHMENT_SERVICE_HOST=member-a-attachment
      - ATTACHMENT_SERVICE_PORT=3000
      - USER_URI=//Alice
      - PROXY_FOR=
      - IDP_CLIENT_ID=sequence
      - IDP_PUBLIC_ORIGIN=http://localhost:3080
      - IDP_INTERNAL_ORIGIN=http://keycloak:8080
      - IDP_PATH_PREFIX=
      - IDP_OAUTH2_REALM=member-a
      - IDP_INTERNAL_REALM=internal
      - IDP_INTERNAL_CLIENT_ID=sequence
      - IDP_INTERNAL_CLIENT_SECRET=secret
    ports:
      - 3000:3000
    depends_on:
      member-a-node:
        condition: service_healthy
      member-a-identity:
        condition: service_started
      member-a-attachment:
        condition: service_healthy
      member-a-postgres-matchmaker-api:
        condition: service_healthy
      ipfs:
        condition: service_healthy
    restart: on-failure
    networks: ['member-a']

  # -------------------------------------------------------------------- member-b
  member-b-postgres-matchmaker-api:
    image: postgres:17.4-alpine
    container_name: member-b-postgres-matchmaker
    ports:
      - 5442:5432
    volumes:
      - member-b-matchmaker-api-storage:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=sqnc-matchmaker-api
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
    networks: ['member-b']

  member-b-postgres-identity:
    image: postgres:17.4-alpine
    container_name: member-b-postgres-identity
    ports:
      - 5443:5432
    volumes:
      - member-b-identity-storage:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=sqnc-identity
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
    networks: ['member-b']

  member-b-postgres-attachment-api:
    image: postgres:17.4-alpine
    container_name: member-b-postgres-attachment
    ports:
      - 5444:5432
    volumes:
      - member-b-attachment-api-storage:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=sqnc-attachment-api
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
    networks: ['member-b']

  member-b-identity:
    image: digicatapult/sqnc-identity-service:v4.2.14
    container_name: member-b-identity
    command: /bin/sh -c "npx knex migrate:latest && npm start"
    depends_on:
      member-b-postgres-identity:
        condition: service_healthy
      member-b-node:
        condition: service_healthy
    ports:
      - 3012:3000
    environment:
      - API_HOST=member-b-node
      - DB_HOST=member-b-postgres-identity
      - DB_PORT=5432
      - DB_NAME=sqnc-identity
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - SELF_ADDRESS=5FHneW46xGXgs5mUiveU4sbTyGBzmstUspZC92UhjJM694ty
      - IDP_CLIENT_ID=sequence
      - IDP_PUBLIC_ORIGIN=http://localhost:3080
      - IDP_INTERNAL_ORIGIN=http://keycloak:8080
      - IDP_PATH_PREFIX=
      - IDP_OAUTH2_REALM=member-b
      - IDP_INTERNAL_REALM=internal
    networks: ['member-b']

  member-b-attachment:
    image: digicatapult/sqnc-attachment-api:v3.0.21
    container_name: member-b-attachment
    command: /bin/sh -c "npx knex --env production migrate:latest && npm start"
    depends_on:
      member-b-postgres-attachment-api:
        condition: service_healthy
    ports:
      - 3013:3000
    environment:
      - DB_HOST=member-b-postgres-attachment
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=sqnc-attachment-api
      - IPFS_HOST=ipfs
      - IDENTITY_SERVICE_HOST=member-b-identity
      - IDP_CLIENT_ID=sequence
      - IDP_PUBLIC_ORIGIN=http://localhost:3080
      - IDP_INTERNAL_ORIGIN=http://keycloak:8080
      - IDP_PATH_PREFIX=
      - IDP_OAUTH2_REALM=member-b
      - IDP_INTERNAL_REALM=internal
      - IDP_EXTERNAL_REALM=external
      - IDP_INTERNAL_CLIENT_ID=sequence
      - IDP_INTERNAL_CLIENT_SECRET=secret
      - AUTHZ_WEBHOOK=http://member-b-matchmaker:3000/v1/authz
    networks: ['member-b', 'ipfs']

  member-b-node:
    image: digicatapult/sqnc-node:v12.5.0
    container_name: member-b-node
    command: |
      --base-path /data/
      --bob
      --unsafe-rpc-external
      --rpc-cors all
      --node-key 0000000000000000000000000000000000000000000000000000000000000002
      --bootnodes /dns4/alice/tcp/30333/p2p/12D3KooWEyoppNCUx8Yx66oV9fJnriXwCcXwDDUA2kj6vnc6iDEp
    ports:
      - 9954:9944
    restart: on-failure
    volumes:
      - member-b-node-storage:/data
    networks: ['member-b', 'chain']

  member-b-matchmaker-api:
    container_name: member-b-matchmaker
    build:
      context: './'
      dockerfile: 'Dockerfile'
    command: /bin/sh -c "npx knex migrate:latest --knexfile build/lib/db/knexfile && npm start"
    environment:
      - LOG_LEVEL=trace
      - NODE_HOST=member-b-node
      - NODE_PORT=9944
      - DB_HOST=member-b-postgres-matchmaker
      - DB_PORT=5432
      - DB_NAME=sqnc-matchmaker-api
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - IDENTITY_SERVICE_HOST=member-b-identity
      - IDENTITY_SERVICE_PORT=3000
      - ATTACHMENT_SERVICE_HOST=member-b-attachment
      - ATTACHMENT_SERVICE_PORT=3000
      - USER_URI=//Bob
      - PROXY_FOR=
      - IDP_CLIENT_ID=sequence
      - IDP_PUBLIC_ORIGIN=http://localhost:3080
      - IDP_INTERNAL_ORIGIN=http://keycloak:8080
      - IDP_PATH_PREFIX=
      - IDP_OAUTH2_REALM=member-b
      - IDP_INTERNAL_REALM=internal
      - IDP_INTERNAL_CLIENT_ID=sequence
      - IDP_INTERNAL_CLIENT_SECRET=secret
    ports:
      - 3010:3000
    depends_on:
      member-b-node:
        condition: service_healthy
      member-b-identity:
        condition: service_started
      member-b-attachment:
        condition: service_healthy
      member-b-postgres-matchmaker-api:
        condition: service_healthy
      ipfs:
        condition: service_healthy
    restart: on-failure
    networks: ['member-b']

  # ------------------------------------------------------------------- optimiser

  optimiser-postgres-matchmaker-api:
    image: postgres:17.4-alpine
    container_name: optimiser-postgres-matchmaker
    ports:
      - 5452:5432
    volumes:
      - optimiser-matchmaker-api-storage:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=sqnc-matchmaker-api
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
    networks: ['optimiser']

  optimiser-postgres-identity:
    image: postgres:17.4-alpine
    container_name: optimiser-postgres-identity
    ports:
      - 5453:5432
    volumes:
      - optimiser-identity-storage:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=sqnc-identity
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
    networks: ['optimiser']

  optimiser-postgres-attachment-api:
    image: postgres:17.4-alpine
    container_name: optimiser-postgres-attachment
    ports:
      - 5454:5432
    volumes:
      - optimiser-attachment-api-storage:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=sqnc-attachment-api
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
    networks: ['optimiser']

  optimiser-identity:
    image: digicatapult/sqnc-identity-service:v4.2.14
    container_name: optimiser-identity
    command: /bin/sh -c "npx knex migrate:latest && npm start"
    depends_on:
      optimiser-postgres-identity:
        condition: service_healthy
      optimiser-node:
        condition: service_healthy
    ports:
      - 3022:3000
    environment:
      - API_HOST=optimiser-node
      - DB_HOST=optimiser-postgres-identity
      - DB_PORT=5432
      - DB_NAME=sqnc-identity
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - SELF_ADDRESS=5FLSigC9HGRKVhB9FiEo4Y3koPsNmBmLJbpXg2mp1hXcS59Y
      - IDP_CLIENT_ID=sequence
      - IDP_PUBLIC_ORIGIN=http://localhost:3080
      - IDP_INTERNAL_ORIGIN=http://keycloak:8080
      - IDP_PATH_PREFIX=
      - IDP_OAUTH2_REALM=optimiser
      - IDP_INTERNAL_REALM=internal
    networks: ['optimiser']

  optimiser-attachment:
    image: digicatapult/sqnc-attachment-api:v3.0.21
    container_name: optimiser-attachment
    command: /bin/sh -c "npx knex --env production migrate:latest && npm start"
    depends_on:
      optimiser-postgres-attachment-api:
        condition: service_healthy
    ports:
      - 3023:3000
    environment:
      - DB_HOST=optimiser-postgres-attachment
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=sqnc-attachment-api
      - IPFS_HOST=ipfs
      - IDENTITY_SERVICE_HOST=optimiser-identity
      - IDP_CLIENT_ID=sequence
      - IDP_PUBLIC_ORIGIN=http://localhost:3080
      - IDP_INTERNAL_ORIGIN=http://keycloak:8080
      - IDP_PATH_PREFIX=
      - IDP_OAUTH2_REALM=optimiser
      - IDP_INTERNAL_REALM=internal
      - IDP_EXTERNAL_REALM=external
      - IDP_INTERNAL_CLIENT_ID=sequence
      - IDP_INTERNAL_CLIENT_SECRET=secret
      - AUTHZ_WEBHOOK=http://optimiser-matchmaker:3000/v1/authz
    networks: ['optimiser', 'ipfs']

  optimiser-node:
    image: digicatapult/sqnc-node:v12.5.0
    container_name: optimiser-node
    command: |
      --base-path /data/
      --charlie
      --unsafe-rpc-external
      --rpc-cors all
      --node-key 0000000000000000000000000000000000000000000000000000000000000003
      --bootnodes /dns4/alice/tcp/30333/p2p/12D3KooWEyoppNCUx8Yx66oV9fJnriXwCcXwDDUA2kj6vnc6iDEp
    ports:
      - 9964:9944
    restart: on-failure
    volumes:
      - optimiser-node-storage:/data
    networks: ['optimiser', 'chain']

  optimiser-matchmaker-api:
    container_name: optimiser-matchmaker
    build:
      context: './'
      dockerfile: 'Dockerfile'
    command: /bin/sh -c "npx knex migrate:latest --knexfile build/lib/db/knexfile && npm start"
    environment:
      - LOG_LEVEL=trace
      - NODE_HOST=optimiser-node
      - NODE_PORT=9944
      - DB_HOST=optimiser-postgres-matchmaker
      - DB_PORT=5432
      - DB_NAME=sqnc-matchmaker-api
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - IDENTITY_SERVICE_HOST=optimiser-identity
      - IDENTITY_SERVICE_PORT=3000
      - ATTACHMENT_SERVICE_HOST=optimiser-attachment
      - ATTACHMENT_SERVICE_PORT=3000
      - USER_URI=//Charlie
      - PROXY_FOR=
      - IDP_CLIENT_ID=sequence
      - IDP_PUBLIC_ORIGIN=http://localhost:3080
      - IDP_INTERNAL_ORIGIN=http://keycloak:8080
      - IDP_PATH_PREFIX=
      - IDP_OAUTH2_REALM=optimiser
      - IDP_INTERNAL_REALM=internal
      - IDP_INTERNAL_CLIENT_ID=sequence
      - IDP_INTERNAL_CLIENT_SECRET=secret
    ports:
      - 3020:3000
    depends_on:
      optimiser-node:
        condition: service_healthy
      optimiser-identity:
        condition: service_started
      optimiser-attachment:
        condition: service_healthy
      optimiser-postgres-matchmaker-api:
        condition: service_healthy
      ipfs:
        condition: service_healthy
    restart: on-failure
    networks: ['optimiser']

  # ------------------------------------------------------------------------ ipfs
  ipfs:
    image: ipfs/go-ipfs:v0.34.1
    container_name: ipfs
    environment:
      - |
        IPFS_SWARM_KEY=/key/swarm/psk/1.0.0/
        /base16/
        0000000000000000000000000000000000000000000000000000000000000000
    ports:
      - 4001:4001
      - 8080:8080
      - 5001:5001
    networks: ['ipfs']
    volumes:
      - ipfs:/data/ipfs

  # ------------------------------------------------------------------------ keycloak
  keycloak:
    image: quay.io/keycloak/keycloak:26.2.2
    container_name: keycloak
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
    ports:
      - 3080:8080
    volumes:
      - ./docker/keycloak:/opt/keycloak/data/import
    command: start-dev --import-realm
    networks: ['member-a', 'member-b', 'optimiser']

volumes:
  member-a-matchmaker-api-storage:
  member-a-identity-storage:
  member-a-attachment-api-storage:
  member-a-node-storage:
  member-b-matchmaker-api-storage:
  member-b-identity-storage:
  member-b-attachment-api-storage:
  member-b-node-storage:
  optimiser-matchmaker-api-storage:
  optimiser-identity-storage:
  optimiser-attachment-api-storage:
  optimiser-node-storage:
  ipfs:
